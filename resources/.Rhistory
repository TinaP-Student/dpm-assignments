library(ggplot2)
?layer()
?factor
factor(letters[1:20], labels = "letter")
z <- factor(LETTERS[3:1], ordered = TRUE)
z
z <- factor(LETTERS[3:1], ordered = FALSE)
z
ordered(z, TRUE)
factor(z, exclude = "C")
z
?theme
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases")
p1
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases") +
theme_minimal()
p1
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases") +
theme_dark
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases") +
theme_dark()
p1
?palette
scale_fill_brewer(palette = "Dark2",
name = "Group",
labels = c("Bilingual", "Monobilingual"))
?scale_fill_brewer
d + scale_colour_brewer()
set.seed(596)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
(d <- ggplot(dsamp, aes(carat, price)) +
geom_point(aes(colour = clarity)))
d + scale_colour_brewer()
View(d)
library("viridis")           # Load
install.packages("viridis")  # Install
barplot(1:10, col = viridis(10))
library("viridis")  # Load
barplot(1:10, col = viridis(10))
library(RColorBrewer)
display.brewer.all()
barplot(1:10, col = Set3)
barplot(1:10, col = Set3(10))
barplot(1:10, n = 10, name= "Dark2")
barplot(1:10,colors()= "Dark2")
barplot(1:10,col= "Dark2")
barplot(1:10,scale_color_brewer(palette = "Dark2"))
barplot(1:10,palette = "Dark2")
barplot(1:10, col = brewer.pal(n = 10, name = "RdBu"))
barplot(1:10, col = brewer.pal(n = 10, name = "paired"))
barplot(1:10, col = brewer.pal(n = 10, name = "Paired"))
# Scatter plot
sp + scale_color_brewer(palette = "Dark2")
# Scatter plot
sp + scale_color_brewer(palette = "Dark2")
barplot(1:10, col = brewer.pal(n = 10, name = "Paired"))+ scale_color_brewer(palette = "Dark2")
barplot(1:10)+ scale_color_brewer(palette = "Dark2")
library(RColorBrewer)
display.brewer.all()
barplot(1:10, col = brewer.pal(n = 10, name = "Paired"))+ scale_color_brewer(palette = "Dark2")
#Boxplot
x + scale_fill_grey(start = 0.8, end = 0.2)
library("ggplot2")
library("ggsci")
library("ggplot2")
library("ggsci")
install.packages("ggsci")
library("ggplot2")
install.packages("ggsci")
library("ggsci")
# Change area fill color. JCO palette
ggplot(iris, aes(Species, Sepal.Length)) +
geom_boxplot(aes(fill = Species)) +
scale_fill_jco()+
theme_classic() +
theme(legend.position = "top")
# Change point color and the confidence band fill color.
# Use tron palette on dark theme
ggplot(iris, aes(Sepal.Length, Sepal.Width)) +
geom_point(aes(color = Species)) +
geom_smooth(aes(color = Species, fill = Species)) +
scale_color_tron()+
scale_fill_tron()+
theme_dark() +
theme(
legend.position = "top",
panel.background = element_rect(fill = "#2D2D2D"),
legend.key = element_rect(fill = "#2D2D2D")
)
barplot(1:10, col = pal_jco()(10))
install.packages("wesanderson")
install.packages("wesanderson")
library(wesanderson)
library(wesanderson)
names(wes_palettes)
names(wes_palettes)
# Discrete color
bp + scale_fill_manual(values = wes_palette("GrandBudapest1", n = 3))
# Gradient color
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(heatmap, aes(x = X2, y = X1, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = pal) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal()
# Gradient color
pal <- wes_palette("Moonrise1", 100, type = "continuous")
# Gradient color
pal <- wes_palette("Moonrise1", 100, type = "continuous")
ggplot(heatmap, aes(x = X2, y = X1, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = pal) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal()
#base plot
barplot(1:10, col = wes_palette("Moonrise2", 10, type = "continuous"))
barplot(1:5, col=rainbow(5))
# Use heat.colors
barplot(1:5, col=heat.colors(5))
# Use terrain.colors
barplot(1:5, col=terrain.colors(5))
# Use topo.colors
barplot(1:5, col=topo.colors(5))
# Use cm.colors
barplot(1:5, col=cm.colors(5))
