theme_minimal() +
coord_cartesian(xlim = c(0, 5000)) +
theme(panel.grid.minor = element_blank())
ggplot(data_processed_after_exclusions, aes(x = mean2)) +
geom_histogram(binwidth = 100,
color = "darkblue",
fill = "lightblue") +
xlab("Mean2") +
ylab("Frequency") +
theme_minimal() +
coord_cartesian(xlim = c(0, 5000)) +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 100,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean1") +
ylab("Frequency") +
theme_minimal() +
coord_cartesian(xlim = c(0, 5000)) +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 1,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean1") +
ylab("Frequency") +
theme_minimal() +
coord_cartesian(xlim = c(0, 5000)) +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 200,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean1") +
ylab("Frequency") +
theme_minimal() +
coord_cartesian(xlim = c(0, 5000)) +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 200,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean1") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 10,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean1") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 10,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 10,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 1,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 0.5,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(0, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))|>
na.omit()+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(na.omit(data_processed_after_exclusions), aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(na.omit(data_processed_after_exclusions), aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(data_processed_after_exclusions[complete.cases(data_processed_after_exclusions), ], aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
#für beide Plots die gleichen Dimensionen verwendet, um sie besser zu vergleichen
ggplot(data_processed_after_exclusions, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
View(data_processed_after_exclusions)
mean_agree <- data_processed_after_exclusions|>
select(mean_agreeableness)|>
na.omit()
View(mean_agree)
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.25,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.2,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.1,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.2,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.15,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.10,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.01,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.10,
color = "darkgreen",
fill = "lightgreen") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.10,
color = "#993399",
fill = "#ff3399") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.10,
color = "#993399",
fill = "#330033") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
ggplot(mean_agree, aes(x = mean_agreeableness))+
geom_histogram(binwidth = 0.10,
color = "#330033",
fill = "#993399") +
xlab("Mean Agreeableness") +
ylab("Frequency") +
coord_cartesian(xlim = c(1, 6)) +
theme_minimal() +
theme(panel.grid.minor = element_blank())
# Subset the data for men and women
men_data <- subset(data_processed_after_exclusions, gender == "Men")
women_data <- subset(data_processed_after_exclusions, gender == "Women")
View(men_data)
View(women_data)
women_data <- subset(data_processed_after_exclusions, gender == "female")
# Subset the data for men and women
men_data <- subset(data_processed_after_exclusions, gender == "male")
unknown <- subset(data_processed_after_exclusions, gender == "missing")
View(unknown)
# Perform the t-test
t_test_result <- t.test(men_data$mean1, women_data$mean1)
View(t_test_result)
# Print the t-test result
t_test_result
library(report)
report_text(t_test_result)
# Perform the t-test
t_test_mean1 <- t.test(men_data$mean1, women_data$mean1)
t_test_mean2 <- t.test(men_data$mean1, women_data$mean2)
report_text(mean2)
t_test_mean2 <- t.test(men_data$mean1, women_data$mean2)
report_text(t_test_mean2)
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male"))
t_test_result <- t.test(mean1 ~ gender, data = data_t_test)
print(t_test_result)
print(t_test_mean1)
print(t_test_result)
print(t_test_mean1)
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male", "missing"))
t_test_result <- t.test(mean1 ~ gender, data = data_t_test)
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male"))
t_test_result <- t.test(mean1 ~ gender, data = data_t_test)
t_test_mean1 <- t.test(mean1 ~ gender, data = data_t_test)
t_test_mean2 <- t.test(mean2 ~ gender, data = data_t_test)
report(t_test_mean1)
t_test_mean1 <- t.test(mean1 ~ gender, data = data_t_test)|>
report()
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male"))
t_test_mean1 <- t.test(mean1 ~ gender, data = data_t_test)
t_test_mean2 <- t.test(mean2 ~ gender, data = data_t_test)
report(t_test_mean1)
report_text(t_test_mean1)
report_table(t_test_mean1)
report_effectsize(t_test_mean1)
report_table(t_test_mean1)
report_effectsize(t_test_mean1)
report_text(t_test_mean1)
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male"))
t_test_mean1 <- t.test(mean1 ~ gender, data = data_t_test)
report_table(t_test_mean1)
report_text(t_test_mean1)
t_test_mean2 <- t.test(mean2 ~ gender, data = data_t_test)
report_table(t_test_mean2)
report_text(t_test_mean2)
# Run a regression with Extraversion as the predictor variable
regression_model_extraversion <- lm(mean1 ~ mean_agreeabless, data = data_processed_after_exclusions)
# Run a regression with Extraversion as the predictor variable
regression_model_extraversion <- lm(mean1 ~ mean_openness, data = data_processed_after_exclusions)
n
# Print the summary for the regression model
summary(regression_model_extraversion)
regression_openness<- lm(mean1 ~ mean_openness, data = data_processed_after_exclusions)
report(regression_openness)
# for Openness
regression_openness_mean1<- lm(mean1 ~ mean_openness, data = data_processed_after_exclusions)
regression_openness_mean2<- lm(mean1 ~ mean_openness, data = data_processed_after_exclusions)
report(regression_openness_mean1)
summary(regression_openness_mean1)
report(regression_openness_mean2)
summary(regression_openness_mean2)
#subset or select - es kommt aufs gleiche, ich habe mich für select entschieden, weil mit subset die starts_with nicht so recht funktionieren wollte und ich lieber mit starts_with arbeiten würde, weil das weniger fehleranfällig ist, als die einzelnen Items rauszuschreiben (wo mir ein Fehlöer unterlaufen ist und ich es zum glück noch gemerkt habe)
alpha_agreeableness <- data_processed_after_exclusions |>
select(starts_with("bfi_a")) |>
na.omit() |>
alpha()
alpha_openness <- data_processed_after_exclusions |>
select(starts_with("bfi_o")) |>
na.omit() |>
alpha()
alpha_openness <- data_processed_after_exclusions |>
select(starts_with("bfi_o")) |>
na.omit() |>
alpha()|>
print()
alpha_extroversion <- data_processed_after_exclusions |>
select(starts_with("bfi_e")) |>
na.omit() |>
alpha()
alpha_neuroticism <- data_processed_after_exclusions |>
select(starts_with("bfi_n")) |>
na.omit() |>
alpha()
alpha_conscientiousness <- data_processed_after_exclusions |>
select(starts_with("bfi_c")) |>
na.omit() |>
alpha()
part1_correlations <- data_processed_after_exclusions |>
select(starts_with(c("bfi_a", "bfi_o")), mean1, mean2) |>
na.omit()|>
cor()|>
round(2)
part2_correlations <- data_processed_after_exclusions |>
select(starts_with(c("bfi_n", "bfi_e", "bfi_c")), mean1, mean2) |>
na.omit()|>
cor()|>
round(2)
part1_correlations <- data_processed_after_exclusions |>
select(starts_with(c("bfi_a", "bfi_o")), mean1, mean2) |>
na.omit()|>
cor()|>
round(2)|>
print()
part1_correlations <- data_processed_after_exclusions |>
select(starts_with(c("bfi_a", "bfi_o")), mean1, mean2) |>
na.omit()|>
cor()|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
print()
part2_correlations <- data_processed_after_exclusions |>
select(starts_with(c("bfi_n", "bfi_e", "bfi_c")), mean1, mean2) |>
na.omit()|>
cor()|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(starts_with(c("mean")), D) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 8),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(starts_with(c("mean")), "D") |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 8),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(starts_with(c("mean"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 8),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(c(starts_with(c("mean"))), "D") |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 8),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(c(starts_with(c("mean"))), "D") |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 9),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(starts_with(c("mean"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 9),  align = "left") |>
print()
#nicht abspeichern, sondern nur tabelle machen, aber erst machen, sobald klar welche werte verwenden
meanscores_correlations <- data_processed_after_exclusions |>
select(starts_with(c("mean"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI and IAT" = 8),  align = "left") |>
print()
t_test_D <- t.test(D ~ gender, data = data_t_test)
report_table(t_test_D)
report_text(t_test_D)
regression_openness_D <- lm(D ~ mean_openness, data = data_processed_after_exclusions)
report(regression_openness_D)
summary(regression_openness_D)
regression_agreeableness_mean1 <- lm(mean1 ~ mean_agreeableness, data = data_processed_after_exclusions)
regression_agreeableness_mean2 <- lm(mean2 ~ mean_agreeableness, data = data_processed_after_exclusions)
regression_agreeableness_D <- lm(D ~ mean_agreeableness, data = data_processed_after_exclusions)
report(regression_agreeableness_mean1)
summary(regression_agreeableness_mean1)
report(regression_agreeableness_mean2)
summary(regression_agreeableness_mean2)
report(regression_agreeableness_D)
summary(regression_agreeableness_D)
regression_extroversion_mean1 <- lm(mean1 ~ mean_extroversion, data = data_processed_after_exclusions)
regression_extroversion_mean2 <- lm(mean2 ~ mean_extroversion, data = data_processed_after_exclusions)
regression_extroversion_D <- lm(D ~ mean_extroversion, data = data_processed_after_exclusions)
report(regression_extroversion_mean1)
summary(regression_extroversion_mean1)
report(regression_extroversion_mean2)
summary(regression_extroversion_mean2)
report(regression_extroversion_D)
summary(regression_extroversion_D)
regression_neuroticism_mean1 <- lm(mean1 ~ mean_neuroticism, data = data_processed_after_exclusions)
regression_neuroticism_mean2 <- lm(mean2 ~ mean_neuroticism, data = data_processed_after_exclusions)
regression_neuroticism_D <- lm(D ~ mean_neuroticism, data = data_processed_after_exclusions)
report(regression_neuroticism_mean1)
summary(regression_neuroticism_mean1)
report(regression_neuroticism_mean2)
summary(regression_neuroticism_mean2)
report(regression_neuroticism_D)
summary(regression_neuroticism_D)
regression_conscientiousness_mean1 <- lm(mean1 ~ mean_conscientiousness, data = data_processed_after_exclusions)
regression_conscientiousness_mean2 <- lm(mean2 ~ mean_conscientiousness, data = data_processed_after_exclusions)
regression_conscientiousness_D <- lm(D ~ mean_conscientiousness, data = data_processed_after_exclusions)
report(regression_conscientiousness_mean1)
summary(regression_conscientiousness_mean1)
report(regression_conscientiousness_mean2)
summary(regression_conscientiousness_mean2)
report(regression_conscientiousness_D)
summary(regression_conscientiousness_D)
