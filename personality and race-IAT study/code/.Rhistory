data_raw_iat <- read_csv("../data/raw/data_raw_iat.csv") |>
janitor::clean_names()
#geht nur bis 1-6, aber die 0, 7 und NA werden später behandelt
#habe Listen erzeugt, welche Items reversed werden müssen, um es übersichtlicher zu halten
r_agreeableness <- c("bfi_a1", "bfi_a3", "bfi_a6", "bfi_a8")
r_openness <- c("bfi_o7", "bfi_o9")
r_neuroticism <- c("bfi_n2", "bfi_n5", "bfi_n7")
r_conscientiousness <- c("bfi_c2", "bfi_c4","bfi_c5", "bfi_c9")
r_extroversion <- c("bfi_e2", "bfi_e5", "bfi_e7")
#reverse die Angaben mit case_when
data_raw_bfi_adjusted <- data_raw_bfi |>
rename(ID = unique_id) |>
mutate_at(vars(r_agreeableness, r_openness, r_neuroticism, r_conscientiousness, r_extroversion), list(~ case_when(
. == 6 ~ 1,
. == 5 ~ 2,
. == 4 ~ 3,
. == 3 ~ 4,
. == 2 ~ 5,
. == 1 ~ 6)))
# Agreeableness hat 9 items
agreeableness = c("bfi_a1", "bfi_a2", "bfi_a3", "bfi_a4", "bfi_a5", "bfi_a6", "bfi_a7", "bfi_a8", "bfi_a9")
data_bfi_agreeableness <- data_raw_bfi_adjusted |>
select(agreeableness) |>
filter_all(all_vars(. %in% 1:6)) |>
na.omit()
cor_agreeableness <- cor(data_bfi_agreeableness)
# Openness hat 9 items
openness <- c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")
data_bfi_openness <- data_raw_bfi_adjusted |>
select(openness) |>
filter_all(all_vars(. %in% 1:6)) |>
na.omit()
cor_openness <- cor(data_bfi_openness)
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(-ID) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(agreeableness,openness)))), "exclude", "include"))
View(data_bfi_A_O)
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(-ID) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(2:n) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(2:n()) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(2:19) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c(bfi_a1:bfi_a9)) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c("bfi_a1":"bfi_a9")) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))
View(data_bfi_A_O)
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
filter(!if_all(c(agreeableness, openness), is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))
View(data_bfi_A_O)
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
filter(!if_all(c(agreeableness, openness), is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(-ID) %in% 1:6), "include", "exclude"))
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
filter(!if_all(c(agreeableness, openness), is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(-1) %in% 1:6), "include", "exclude"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(agreeableness,openness)))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1:bfi_a9)))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, "bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, "bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(-ID) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, "bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(-ID) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(-ID)))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9)))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9)))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9)))), "exclude", "include")
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9)))), "exclude", "include")
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include")
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
View(data_bfi_A_O)
data_bfi_N_E_C <- data_raw_bfi_adjusted |>
select(ID,bfi_a1:bfi_a9)|>
filter(!if_all(bfi_a1:bfi_a9, is.na))|>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
View(data_bfi_N_E_C)
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude")) |>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
#für Agree und Openess
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude")) |>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
View(data_bfi_A_O)
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(-ID))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(-ID))), "exclude", "include"))
View(data_bfi_A_O)
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1:bfi_a9)))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "lol", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(agreeableness))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1, bfi_a2))), "exclude", "include"))
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1, bfi_a2))), "exclude", "include"))
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1, bfi_a2))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1, bfi_a2))), "exclude", "include")))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1, bfi_a2)))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1, bfi_a2)))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(bfi_a1 | bfi_a2)))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1 | bfi_a2))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1 | bfi_a2)), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1 : bfi_a2)), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1:bfi_a2)), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1:bfi_a9)), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1,bfi_a3)), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9)|>
filter(!if_all(-ID, is.na))|>
mutate(exclude_not_completed = if_else(any(is.na(bfi_a1 | bfi_a3)), "exclude", "include"))
mutate(exclude_not_completed = if_else(any(is.na(), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "lol"))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1:bfi_a9) >= 1 & c_across(bfi_a1:bfi_a9) <= 6),
"include",
"exclude"
))
View(data_bfi_A_O)
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1:bfi_a9) >= 1 & c_across(bfi_a1:bfi_a9) <= 6),
"include",
"exclude"
))
View(data_bfi_A_O)
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1:bfi_a9) >= 1 & c_across(bfi_a1:bfi_a9) <= 6),
"include",
"exclude"
))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
filter(!if_all(is.na)) |>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
filter(!if_all(is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1:bfi_a9) >= 1 & c_across(bfi_a1:bfi_a9) <= 6),
"include",
"exclude"
))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
filter(!if_all(bfi_a1:bfi_a9, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1:bfi_a9) >= 1 & c_across(bfi_a1:bfi_a9) <= 6),
"include",
"exclude"
))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
filter(!if_all(bfi_a1:bfi_a9, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a1) >= 1 & c_across(bfi_a1) <= 6),
"include",
"exclude"
))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
filter(!if_all(bfi_a1:bfi_a9, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a2) >= 1 & c_across(bfi_a2) <= 6),
"include",
"exclude"
))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
rowwise()|>
filter(!if_all(bfi_a1:bfi_a9, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a2) >= 1 & c_across(bfi_a2) <= 6),
"include",
"exclude"
))
data_bfi_A_O  <- data_raw_bfi_adjusted |>
select(bfi_a1:bfi_a9) |>
rowwise()|>
filter(!if_all(bfi_a1:bfi_a9, is.na)) |>
mutate(exclude_impossible = ifelse(
all(c_across(bfi_a2) >= 1 & c_across(bfi_a2) <= 6),
"include","exclude"
))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
#für Agree und Openess -> 2 scales
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, bfi_a1:bfi_a9) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
Adata_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(bfi_a1:bfi_a9) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(bfi_a1:bfi_a9))), "exclude", "include"))
View(Adata_bfi_A_O)
Adata_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(agreeableness) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(agreeableness))), "exclude", "include"))
Bdata_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(agreeableness) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(agreeableness))), "exclude", "include"))
View(Bdata_bfi_A_O)
Bdata_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(agreeableness, openness) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(agreeableness, openness))), "exclude", "include"))
Bdata_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(agreeableness, openness)))), "exclude", "include"))
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(agreeableness, openness)))), "exclude", "include"))
View(data_raw_bfi_adjusted)
# Extroversion hat 8 items
extroversion <- c("bfi_e1", "bfi_e2", "bfi_e3", "bfi_e4", "bfi_e5", "bfi_e6", "bfi_e7", "bfi_e8")
data_bfi_extroversion <- data_raw_bfi_adjusted |>
select(extroversion) |>
filter_all(all_vars(. %in% 1:6)) |>
na.omit()
cor_extroversion <- cor(data_bfi_extroversion)
# Neuroticism hat 8 items
neuroticism <- c("bfi_n1", "bfi_n2", "bfi_n3", "bfi_n4", "bfi_n5", "bfi_n6", "bfi_n7", "bfi_n8")
data_bfi_neuroticism <- data_raw_bfi_adjusted |>
select(neuroticism) |>
filter_all(all_vars(. %in% 1:6)) |>
na.omit()
cor_neuroticism <- cor(data_bfi_neuroticism)
# Conscientiousness hat 9 items
conscientiousness<- c("bfi_c1", "bfi_c2", "bfi_c3", "bfi_c4", "bfi_c5", "bfi_c6", "bfi_c7", "bfi_c8", "bfi_c9")
data_bfi_conscientiousness <- data_raw_bfi_adjusted |>
select(conscientiousness) |>
filter_all(all_vars(. %in% 1:6)) |>
na.omit()
cor_conscientiousness <- cor(data_bfi_conscientiousness)
data_bfi_N_E_C <- data_raw_bfi_adjusted |>
select(ID, extroversion, neuroticism, conscientiousness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(aextroversion, neuroticism, conscientiousness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(extroversion, neuroticism, conscientiousness)))), "exclude", "include"))
data_bfi_N_E_C <- data_raw_bfi_adjusted |>
select(ID, extroversion, neuroticism, conscientiousness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(extroversion, neuroticism, conscientiousness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(extroversion, neuroticism, conscientiousness)))), "exclude", "include"))
View(data_bfi_N_E_C)
merged_data <- inner_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select(ID)
View(merged_data)
merged_data <- inner_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
filter(ID)
merged_data <- inner_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
filter(1)
merged_data <- inner_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select(ID)
merged_data <- inner_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select("ID")
merged_data <- full_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select("ID")
View(merged_data)
identical(merged_data, data_raw_bfi_adjusted$ID)
identical(merged_data, data_raw_bfi_adjusted)
notmerged <- data_raw_bfi_adjusted$ID
notmerged <- data_raw_bfi_adjusted|>
select("ID")
identical(merged_data, notmerged)
View(merged_data)
View(notmerged)
# Finde Unterschiede zwischen data1 und data2 basierend auf der ID-Spalte
differences_data1 <- anti_join(notmerged, merged_data, by = "ID")
View(differences_data1)
differences_data2 <- anti_join(merged_data, notmerged, by = "ID")
View(differences_data2)
differences_data2 <-  setdiff(merged_data, notmer, by = "ID")
# Finde Unterschiede zwischen data1 und data2 basierend auf der ID-Spalte
differences_data1 <-  setdiff(notmerged, merged_data, by = "ID")
?anti_join
identical(notmerged, merged_data)
identical(notmerged, merged_data, by = "ID")
identical(notmerged, merged_data, by = "ID")
identical(notmerged, merged_data)
all_equal(merged_data, notmerged)
all.equal(merged_data, notmerged)
differences_data1 <- anti_join(notmerged, merged_data, by = "ID")
differences_data2 <- anti_join(merged_data, notmerged, by = "ID")
View(differences_data1)
duplicated(merged_data)
#179 Observationen wie im nicht merged Satz - heisst komplett
merged_data <- full_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select("ID")
notmerged_data <- data_raw_bfi_adjusted|>
select("ID")
differences_data1 <- anti_join(notmerged_data, merged_data, by = "ID")
differences_data2 <- anti_join(merged_data, notmerged_data, by = "ID")
#keine Dupilcate!
duplicated(merged_data)
