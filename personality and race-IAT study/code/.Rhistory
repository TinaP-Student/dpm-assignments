mutate_at(vars(r_agreeableness, r_openness, r_neuroticism, r_conscientiousness, r_extroversion), list(~ case_when(
. == 6 ~ 1,
. == 5 ~ 2,
. == 4 ~ 3,
. == 3 ~ 4,
. == 2 ~ 5,
. == 1 ~ 6)))
View(data_raw_bfi_adjusted)
#habe zwei Datasätze gemacht und die Teilnerhmer aufgteilt in den Gruppen: A & o <- Teilnehmer die nur diese zwei Skalen ausgefüllt haben
# N und E und C <- Teilnehmer, die nur diese drei Skalen ausgefüllt haben
#ich kann sie so gruppieren bezöglich der exclude_impossible <- weil in der Masterexklusion müsste ich die dann sowieso excluden
#zuerst unterteile ich den Datensatz nach ID und den gewünschten Items, falls die Teilnehmer gar keine Items aus der gewünschten Skalen gelöst haben, werde ich diese aus diesem Datensatz entfernen und sie dann im anderen Datensatz berücksichtigen
#für Agree und Openess -> 2 scales
openness <- c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9")
agreeableness <- c("bfi_a1", "bfi_a2", "bfi_a3", "bfi_a4", "bfi_a5", "bfi_a6", "bfi_a7", "bfi_a8", "bfi_a9")
data_bfi_A_O <- data_raw_bfi_adjusted |>
select(ID, agreeableness, openness) |>
rowwise()|> #wenn rowwise fehlt, wird der Code nicht funktionieren
filter(!if_all(-ID, is.na)) |> #es müssen ALLE NAs sein, danne rst gedroppt
mutate(exclude_impossible = if_else(all(c_across(c(agreeableness, openness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(agreeableness, openness)))), "exclude", "include"))
#ich haben die zweier oder dreier Skalen zusammengenommen, weil die Teilnehmer entweder zwei oder drei ganz ausgefüllt haben sollten
#für Extra Neure und Verträglich -> 3 scales
extroversion <- c("bfi_e1", "bfi_e2", "bfi_e3", "bfi_e4", "bfi_e5", "bfi_e6", "bfi_e7", "bfi_e8")
neuroticism <- c("bfi_n1", "bfi_n2", "bfi_n3", "bfi_n4", "bfi_n5", "bfi_n6", "bfi_n7", "bfi_n8")
conscientiousness<- c("bfi_c1", "bfi_c2", "bfi_c3", "bfi_c4", "bfi_c5", "bfi_c6", "bfi_c7", "bfi_c8", "bfi_c9")
data_bfi_N_E_C <- data_raw_bfi_adjusted |>
select(ID, extroversion, neuroticism, conscientiousness) |>
rowwise()|>
filter(!if_all(-ID, is.na)) |>
mutate(exclude_impossible = if_else(all(c_across(c(extroversion, neuroticism, conscientiousness)) %in% 1:6), "include", "exclude"))|>
mutate(exclude_not_completed = if_else(any(is.na(c_across(c(extroversion, neuroticism, conscientiousness)))), "exclude", "include"))
View(data_bfi_A_O)
View(data_bfi_N_E_C)
data_bfi_ms_A_O <- data_bfi_A_O |>
group_by(ID) |>
summarize(mean_agreeableness = mean(c(bfi_a1, bfi_a2, bfi_a3, bfi_a4, bfi_a5, bfi_a6, bfi_a7, bfi_a8, bfi_a9)),
mean_openness = mean(c(bfi_o1, bfi_o2, bfi_o3, bfi_o4, bfi_o5, bfi_o6, bfi_o7, bfi_o8, bfi_o9)))
data_bfi_ms_N_E_C <- data_bfi_N_E_C |>
group_by(ID) |>
summarize(mean_extroversion = mean(c(bfi_e1, bfi_e2, bfi_e3, bfi_e4, bfi_e5, bfi_e6, bfi_e7, bfi_e8)),
mean_neuroticism = mean(c(bfi_n1, bfi_n2, bfi_n3, bfi_n4, bfi_n5, bfi_n6, bfi_n7, bfi_n8)),
mean_conscientiousness = mean(c(bfi_c1, bfi_c2, bfi_c3, bfi_c4, bfi_c5, bfi_c6, bfi_c7, bfi_c8, bfi_c9)))
data_bfi_meanscores <- full_join(data_bfi_ms_A_O, data_bfi_ms_N_E_C, by= "ID")
View(data_bfi_meanscores)
data_raw_iat_check <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
count(block_number)
#das entfernen von den practice blocks hat geklappt
data_raw_iat_D <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
mutate(reaction_time = as.numeric(reaction_time))|>
group_by(ID) |>
summarize(mean1 = mean(reaction_time[block_number %in% c("3", "6")]),
mean2 = mean(reaction_time[block_number %in% c("4", "7")]),
SD = sd(c(reaction_time[block_number %in% c("3", "6")],
reaction_time[block_number %in% c("4", "7")])),
D = (mean2 - mean1) / SD)  |>
ungroup()
#179 Observationen, stimmt mit den Observationen von BFI überein!
View(data_raw_iat_D)
data_iat_incomplete <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
group_by(ID) |>
summarize(total_trials = n())|>
mutate(exclude_incomplete = if_else(total_trials == 120, "include", "exclude"))|>
ungroup()
data_iat_trials_exclusions <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
mutate(reaction_time = as.numeric(reaction_time),
less_300 = if_else(reaction_time < 300, TRUE, FALSE),
accuracy = if_else(trial_accuracy == "correct", TRUE, FALSE)) |>
group_by(ID) |>
summarize(fast_rt = mean(less_300),
average_accuracy = mean(accuracy))|>
mutate(exclude_fast = if_else(fast_rt > 0.10, "exclude", "include"),
exclude_accuracy = if_else(average_accuracy < 0.75, "exclude", "include"))|>
ungroup()
##zuerst getrennt gemacht, um eine bessere Übersicht zu haben
#die zwei Codeblöcke zusammengeführt, um es kompakter zu halten
# exclusion_less_300 <- data_raw_iat |>
#   filter(!block_number %in% c("1", "2", "5"))|>
#   mutate(reaction_time = as.numeric(reaction_time),
#          less_300 = if_else(reaction_time < 300, TRUE, FALSE)) |>
#   group_by(ID) |>
#   summarize(fast_rt = mean(less_300))|>
#   mutate(exclude1 = if_else(fast_rt > 0.10, "exclude", "include"))
#
#
# exclusion_accuracy <- data_raw_iat|>
#   filter(!block_number %in% c("1", "2", "5"))|>
#   mutate(accuracy = if_else(trial_accuracy == "correct", TRUE, FALSE)) |>
#   group_by(ID)|>
#   summarize(average_accuracy = mean(accuracy))|>
#   mutate(exclude2 = if_else(average_accuracy < 0.75, "exclude", "include"))
View(data_iat_incomplete)
View(data_iat_trials_exclusions)
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_A_O|>
full_join(data_bfi_N_E_C = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_A_O|>
full_join(data_bfi_N_E_C, by = "ID")
View(data_processed_temp)
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_A_O|>
full_join(data_bfi_N_E_C, by = "ID", "exclude_impossible", "exclude_not_completed")
data_processed_temp <-  data_bfi_A_O|>
full_join(data_bfi_N_E_C, by = "ID", "exclude_impossible", "exclude_not_completed")
?left_join()
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_A_O|>
inner_join(data_bfi_N_E_C, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_A_O|>
left_join(data_bfi_N_E_C, by = "ID")
Data3 <- bind_rows(data_bfi_A_O, data_bfi_N_E_C)
View(Data3)
merged_data <- full_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID")|>
select("ID")
View(merged_data)
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C)
View(data_bfi_all_5)
?full_join
?bind_rows
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C) |>
select(-exclude_impossible, exclude_impossible)
View(data_bfi_all_5)
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C) |>
select(-exclude_impossible,-exclude_not_completed, exclude_impossible, exclude_not_completed)
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C) |>
select(-exclude_impossible,-exclude_not_completed, exclude_impossible, exclude_not_completed)
View(data_bfi_all_5)
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C, by = "ID") |>
select(-exclude_impossible,-exclude_not_completed, exclude_impossible, exclude_not_completed)
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C) |>
select(-exclude_impossible,-exclude_not_completed, exclude_impossible, exclude_not_completed)
#die beiden Datasätze nun wiedergemeinsam kombinieren
data_bfi_all_5 <- full_join(data_bfi_A_O, data_bfi_N_E_C, by = join_by(ID, exclude_impossible, exclude_not_completed)) |>
select(-exclude_impossible,-exclude_not_completed, exclude_impossible, exclude_not_completed)
View(data_bfi_all_5)
# combine all dfs created in the previous chunks
data_processed_temp <-  data_bfi_all_5|>
full_join(data_age_gender_155, by = "ID")
#zuerst in eine Wideform bringen - sex in gender und unique id in id umbenennen
#muss jetzt schon NA in ID droppen, weil ich sonst die Daten nicht anschauen kann und R abstürzt
data_a_g <- data_raw_demographics|>
na.omit(data_raw_demographics$unique_id)|>
pivot_wider(names_from = variable,
values_from = response)|>
rename(gender = sex, ID = unique_id )
unique(data_a_g$age)
unique(data_a_g$gender) #wie sie die Geschlechtsangabe erfasst haben
unique(duplicated(data_a_g$ID)) #ob es Duplicate gibt - anscheinend nicht
data_age_gender_1453 <- data_a_g |>
mutate(gender = stringr::str_remove_all(gender, regex("\\W+")),
gender = case_when(gender == "f" ~ "female",
gender == "m" ~ "male"),
age = case_when(str_detect(age, "^[0-9]+$") ~ age))
data_age_gender_155 <- data_a_g |>
mutate(gender = stringr::str_remove_all(gender, regex("\\W+")),
gender = case_when(gender == "f" ~ "female",
gender == "m" ~ "male"),
age = case_when(str_detect(age, "^[0-9]+$") ~ age))|>
na.omit()
#extrahiere
data_age <- data_age_gender |>
select(ID, age)
data_processed_temp <-  data_bfi_all_5|>
full_join(data_age_gender_155, by = "ID")
data_processed_temp <-  data_bfi_all_5|>
full_join(data_age_gender_155, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
full_join(data_raw_iat_D, by = "ID")|>
full_join(data_iat_incomplete = "ID")|>
full_join(data_iat_trials_exclusions = "ID")
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")
data_bfi_meanscores <- full_join(data_bfi_ms_A_O, data_bfi_ms_N_E_C, by= "ID")
View(data_bfi_meanscores)
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")
View(data_processed_temp)
colnames(data_processed_temp)
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
full_join(data_raw_iat_D, by = "ID")
View(data_raw_iat_D)
View(data_iat_incomplete)
data_raw_iat_check <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
count(block_number)
#das entfernen von den practice blocks hat geklappt
data_raw_iat_D <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
mutate(ID = as.numeric(ID),
reaction_time = as.numeric(reaction_time))|>
group_by(ID) |>
summarize(mean1 = mean(reaction_time[block_number %in% c("3", "6")]),
mean2 = mean(reaction_time[block_number %in% c("4", "7")]),
SD = sd(c(reaction_time[block_number %in% c("3", "6")],
reaction_time[block_number %in% c("4", "7")])),
D = (mean2 - mean1) / SD)  |>
ungroup()
#179 Observationen, stimmt mit den Observationen von BFI überein!
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
full_join(data_raw_iat_D, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
full_join(data_raw_iat_D, by = "ID")|>
full_join(data_iat_incomplete = "ID")|>
full_join(data_iat_trials_exclusions = "ID")
data_raw_iat_D <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
mutate(reaction_time = as.numeric(reaction_time))|>
group_by(ID) |>
summarize(mean1 = mean(reaction_time[block_number %in% c("3", "6")]),
mean2 = mean(reaction_time[block_number %in% c("4", "7")]),
SD = sd(c(reaction_time[block_number %in% c("3", "6")],
reaction_time[block_number %in% c("4", "7")])),
D = (mean2 - mean1) / SD)  |>
ungroup()
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete = "ID")|>
full_join(data_iat_trials_exclusions = "ID")
data_raw_iat_check <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
count(block_number)
#das entfernen von den practice blocks hat geklappt
data_raw_iat_D <- data_raw_iat |>
filter(!block_number %in% c("1", "2", "5"))|>
mutate(reaction_time = as.numeric(reaction_time))|>
group_by(ID) |>
summarize(mean1 = mean(reaction_time[block_number %in% c("3", "6")]),
mean2 = mean(reaction_time[block_number %in% c("4", "7")]),
SD = sd(c(reaction_time[block_number %in% c("3", "6")],
reaction_time[block_number %in% c("4", "7")])),
D = (mean2 - mean1) / SD)  |>
ungroup()
#179 Observationen, stimmt mit den Observationen von BFI überein!
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete = "ID")|>
full_join(data_iat_trials_exclusions = "ID")
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete, by = "ID")|>
full_join(data_iat_trials_exclusions, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
full_join(data_iat_incomplete, by = "ID")|>
full_join(data_iat_trials_exclusions, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
full_join(data_bfi_all_5, by = "ID")|>
full_join(data_bfi_meanscores, by = "ID")|>
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete, by = "ID")|>
full_join(data_iat_trials_exclusions, by = "ID")|>
mutate(ID = as.nummeric(ID))
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete, by = "ID")|>
full_join(data_iat_trials_exclusions, by = "ID")|>
mutate(ID = as.nummeric(ID))
data_processed_iat <- data_raw_iat_D|>
full_join(data_iat_incomplete, by = "ID")|>
full_join(data_iat_trials_exclusions, by = "ID")|>
mutate(ID = as.numeric(ID))
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155 |>
data_processed_bfi <- data_bfi_all_5|>
full_join(data_bfi_meanscores, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155
data_processed_bfi <- data_bfi_all_5|>
full_join(data_bfi_meanscores, by = "ID")
# combine all dfs created in the previous chunks
data_processed_temp <- data_age_gender_155|>
full_join(data_processed_iat, by = "ID")|>
full_join(data_processed_bfi, by = "ID")
# duplicates...
data_processed_duplicates <- data_processed_temp |>
count(ID) |>
mutate(exclude_duplicate_data = if_else(n > 1, "exclude", "include")) |>
select(-n)
View(data_processed_duplicates)
View(data_processed_temp)
# duplicates... no duplicates, but not anymore 179 Participants -> 182 the extra two are from the demographics and they don't have any Scale Datas
data_processed_duplicates <- data_processed_temp |>
count(ID) |>
mutate(exclude_duplicate_data = if_else(n > 1, "exclude", "include")) |>
select(-n)
# duplicates... no duplicates, but not anymore 179 Participants -> 182 the extra two are from the demographics and they don't have any Scale Datas
data_processed_duplicates <- data_processed_temp |>
count(ID) |>
mutate(exclude_duplicate_data = if_else(n > 1, "exclude", "include"))
# duplicates... no duplicates, but not anymore 179 Participants -> 182 the extra two are from the demographics and they don't have any Scale Datas
data_processed_duplicates <- data_processed_temp |>
count(ID) |>
mutate(exclude_duplicate_data = if_else(n > 1, "exclude", "include"))|>
select(-n)
a <- data_age_gender_1453|>
full_join(data_processed_iat, by = "ID")|>
full_join(data_processed_bfi, by = "ID")
View(a)
# ultimative join
data_processed_before_exklusions <- data_age_gender_155|>
full_join(data_processed_iat, by = "ID")|>
full_join(data_processed_bfi, by = "ID")
# ultimative join
data_processed_before_exklusions_155 <- data_age_gender_155|>
full_join(data_processed_iat, by = "ID")|>
full_join(data_processed_bfi, by = "ID")
data_processed_before_exklusions_1453 <- data_age_gender_1453|>
full_join(data_processed_iat, by = "ID")|>
full_join(data_processed_bfi, by = "ID")
View(data_processed_before_exklusions_155)
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude"))
View(data_processed)
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
!if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
!if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))|>
slice(417047)
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
!if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))|>
slice(ID$417047)
show <- data_processed|>
filter(ID == 417047)|>
print()
View(show)
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
!if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
show <- data_processed|>
filter(ID == 417047)|>
print()
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
show <- data_processed|>
filter(ID == 417047)|>
print()
data_processed <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
data_processed_155 <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
View(data_processed_155)
data_processed_1453 <- data_processed_before_exklusions_1453|>
mutate(exclude_participant = case_when(is.na(age) ~ "exclude",
is.na(gender) ~ "exclude",
if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
write_csv(data_processed_155, "../data/processed/data_processed_155.csv")
write_csv(data_processed_1453, "../data/processed/data_processed_1453.csv")
library(readr)
write_csv(data_processed_155, "../data/processed/data_processed_155.csv")
write_csv(data_processed_155, "../data/processed/data_processed_155.csv")
write_csv(data_processed_1453, "../data/processed/data_processed_1453.csv")
write_csv(data_processed_155, "../data/processed/data_processed_155.csv")
write_csv(data_processed_1453, "../data/processed/data_processed_1453.csv")
View(data_processed_1453)
View(data_processed_1453)
# Verzeichnis erstellen (falls es nicht existiert)
dir.create("../data/processed/", recursive = TRUE)
# CSV-Datei schreiben
write_csv(data_processed_155, file = "../data/processed/data_processed_155.csv")
write_csv(data_processed_1453, "../data/processed/data_processed_1453.csv")
data_processed_155 <- read_csv("../data/processed/data_processed_155.csv")
if(!file.exists("../data/processed/data_processed_codebook.xlsx")){
codebook_template <- data.frame(variable = colnames(data_processed_155)) |>
mutate(explanation = NA)
write.xlsx(codebook_template, file = "../data/processed/data_processed_codebook.xlsx")
}
View(codebook_template)
# library(tidyr)
# library(knitr)
# library(kableExtra)
# library(stringr)
library(openxlsx)
write.xlsx(codebook_template, file = "../data/processed/data_processed_codebook.xlsx")
data_processed_155 <- data_processed_before_exklusions_155|>
mutate(exclude_participant = case_when(if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
#die andere Version
data_processed_1453 <- data_processed_before_exklusions_1453|>
mutate(exclude_participant = case_when(if_all(-c(ID, age, gender), is.na) ~ "exclude",
exclude_impossible == "exclude" ~ "exclude",
exclude_not_completed == "exclude" ~ "exclude",
exclude_incomplete == "exclude" ~ "exclude",
exclude_fast == "exclude" ~ "exclude",
exclude_accuracy == "exclude" ~ "exclude",
TRUE ~ "include"))
View(data_processed_1453)
View(data_processed_155)
count(data_processed_1453, age, exclude_participant)
#teilnehmer ohne Alter und Geschlecht werden berücksichtigt
count(data_processed_1453, age$na, exclude_participant)
#teilnehmer ohne Alter und Geschlecht werden berücksichtigt
count(data_processed_1453, age, exclude_participant$exclude)
#teilnehmer ohne Alter und Geschlecht werden berücksichtigt
count(data_processed_1453, age, exclude_participant)
#teilnehmer ohne Alter und Geschlecht werden berücksichtigt
#count(data_processed_1453, age, exclude_participant)
count(data_processed_1453, gender, exclude_participant)
#data_raw_demographics
data_raw_demographics <- read_csv("../data/raw/data_raw_demographics.csv") |>
janitor::clean_names()
#data_raw_demographics
data_raw_demographics <- read_csv("../data/raw/data_raw_demographics.csv") |>
janitor::clean_names()
library(tidyverse)
library(janitor)
library(stringr)
library(readr)
library(dplyr)
# library(tidyr)
# library(knitr)
# library(kableExtra)
# library(stringr)
library(openxlsx)
#data_raw_demographics
data_raw_demographics <- read_csv("../data/raw/data_raw_demographics.csv") |>
janitor::clean_names()
View(data_raw_demographics)
