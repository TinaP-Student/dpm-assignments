axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Neuroticism")
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
mean_cons <- data_processed_after_exclusions|>
select(mean_conscientiousness, D)|>
na.omit()
ggplot(mean_cons, aes(x = mean_conscientiousness)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#27d08b",
alpha = 0.75) +
labs(x = "mean Conscientiousness",
y = "Frequency") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Conscientiousness")
# meanscores_correlations
data_processed_after_exclusions |>
select(D, starts_with(c("mean_"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
colnames_to_original(names = c("D", "Mean Agreeableness", "Mean Openness",
"Mean Extroversion",	"Mean Neuroticism", "Mean Conscientiousness"))|>
add_header_above(header = c("Correlation between BFI Scales and IAT" = 7),  align = "left")
# meanscores_correlations
data_processed_after_exclusions |>
select(D, starts_with(c("mean_"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI Scales and IAT" = 7),  align = "left")
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(readr)
library(dplyr)
library(janitor)
library(scales)
library(patchwork)
library(ggplot2)
library(patchwork)
library(psych)
library(report)
#mache ichs chon am Anfang und für Reproduzierbarkeit
set.seed(333)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Sample before exclusions" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Sample after exclusions" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
filter(age != "missing")|>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE))|>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
#alle Personen incl. die missings - interessanterweise macht es da keinen Unterschied!
# data_processed_after_exclusions |>
#   mutate(age = as.numeric(age)) |>
#   summarise(Mean = mean(age, na.rm = TRUE),
#             SD = sd(age, na.rm = TRUE)) |>
#   mutate_all(.funs = janitor::round_half_up, digits = 1) |>
#   kable() |>
#   add_header_above(header = c("Age" = 2)) |>
#   kable_classic(full_width = FALSE)
#
data_processed_after_exclusions |>
filter(gender != "missing")|>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |>
kable() |>
kable_classic(full_width = FALSE)
#inclusive den missings - hier macht es einen unterschied!
#ich habe diesen code sichtbar gelasen, weil 14% fehlende Daten doch recht eindrücklich sind
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |>
kable() |>
kable_classic(full_width = FALSE)
#subset or select - es kommt aufs gleiche, ich habe mich für select entschieden, weil mit subset die starts_with nicht so recht funktionieren wollte und ich lieber mit starts_with arbeiten würde, weil das weniger fehleranfällig ist, als die einzelnen Items rauszuschreiben (wo mir ein Fehlöer unterlaufen ist und ich es zum glück noch gemerkt habe)
alpha_agreeableness <- data_processed_after_exclusions |>
select(starts_with("bfi_a")) |>
na.omit() |>
alpha()
alpha_openness <- data_processed_after_exclusions |>
select(starts_with("bfi_o")) |>
na.omit() |>
alpha()
alpha_extroversion <- data_processed_after_exclusions |>
select(starts_with("bfi_e")) |>
na.omit() |>
alpha()
alpha_neuroticism <- data_processed_after_exclusions |>
select(starts_with("bfi_n")) |>
na.omit() |>
alpha()
alpha_conscientiousness <- data_processed_after_exclusions |>
select(starts_with("bfi_c")) |>
na.omit() |>
alpha()
# I chose green because "Greenwald D"
# -2 2 or -1 1 ~ Artikel lesen
ggplot(data_processed_after_exclusions, aes(x = D)) +
geom_histogram(binwidth = 0.1,
boundary = 1,
color = "#000000",
fill = "#446644",
alpha = 0.75) +
labs(x = "D Score",
y = "Frequency",
title = "Distribution of D Score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(-2, 2)) +
scale_y_continuous(breaks = pretty_breaks(n = 4), limits = c(0, 23)) +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
#ebenfalls D inkludiert, damit ich diesen Datasatz wiederverwenden kann
mean_agree <- data_processed_after_exclusions|>
select(mean_agreeableness, D)|>
na.omit()
#Die Farben wurden so gewählt, dass sie sich genug abheben und dass sie mir gefallen :)
#Wenn es ganz nach mir gehen würde, wäre jedereinzelne Plot in einer Gelbvariation
ggplot(mean_agree, aes(x = mean_agreeableness)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#AF5FAF",
alpha = 0.75) +
labs(x = "Mean Agreeableness",
y = "Frequency",
title = "Distribution of Mean Agreeableness") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17))
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
mean_open <- data_processed_after_exclusions|>
select(mean_openness, D)|>
na.omit()
ggplot(mean_open, aes(x = mean_openness)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#FF7F00",
alpha = 0.75) +
labs(x = "mean Openness",
y = "Frequency") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Openness")
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
mean_extro <- data_processed_after_exclusions|>
select(mean_extroversion, D)|>
na.omit()
ggplot(mean_extro, aes(x = mean_extroversion)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#E41A1C",
alpha = 0.75) +
labs(x = "mean Extroversion",
y = "Frequency") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Extroversion")
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
mean_neuro <- data_processed_after_exclusions|>
select(mean_neuroticism, D)|>
na.omit()
ggplot(mean_neuro, aes(x = mean_neuroticism)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#87CEEB",
alpha = 0.75) +
labs(x = "mean Neuroticism",
y = "Frequency") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Neuroticism")
#verwende diesen DFatensatz, damit die Warnung nicht aufkommt, dass mehrere Rows entfernt worden sind
mean_cons <- data_processed_after_exclusions|>
select(mean_conscientiousness, D)|>
na.omit()
ggplot(mean_cons, aes(x = mean_conscientiousness)) +
geom_histogram(binwidth = 0.2,
boundary = 1,
color = "#000000",
fill = "#27d08b",
alpha = 0.75) +
labs(x = "mean Conscientiousness",
y = "Frequency") +
theme_minimal() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1,6)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(0, 17)) +
labs(title = "Distribution of mean Conscientiousness")
# meanscores_correlations
data_processed_after_exclusions |>
select(D, starts_with(c("mean_"))) |>
cor(use = "pairwise.complete.obs")|>
round(2)|>
kable() |>
kable_classic(full_width = FALSE)|>
add_header_above(header = c("Correlation between BFI Scales and IAT" = 7),  align = "left")
# items_correlations  wollte ich noch zusätzlich machen aus Interesse
# data_processed_after_exclusions |>
#   select(D, starts_with(c("bfi_"))) |>
#   cor(use = "pairwise.complete.obs")|>
#   round(2)|>
#   kable() |>
#   kable_classic(full_width = FALSE)|>
#   add_header_above(header = c("Correlation between BFI Items and IAT" = 46),  align = "c")
data_t_test<- data_processed_after_exclusions|>
filter(gender %in% c("female", "male"))
t_test_D <- t.test(D ~ gender, data = data_t_test)
report_table(t_test_D)
report_text(t_test_D)
# t_test_mean1 <- t.test(mean1 ~ gender, data = data_t_test)
# report_table(t_test_mean1)
# report_text(t_test_mean1)
#
# t_test_mean2 <- t.test(mean2 ~ gender, data = data_t_test)
# report_table(t_test_mean2)
# report_text(t_test_mean2)
# for Agreeableness
regression_agreeableness_D <- lm(D ~ mean_agreeableness, data = data_processed_after_exclusions)
report(regression_agreeableness_D)
summary(regression_agreeableness_D)
# regression_agreeableness_mean1 <- lm(mean1 ~ mean_agreeableness, data = data_processed_after_exclusions)
# regression_agreeableness_mean2 <- lm(mean2 ~ mean_agreeableness, data = data_processed_after_exclusions)
#
#
# report(regression_agreeableness_mean1)
# summary(regression_agreeableness_mean1)
#
# report(regression_agreeableness_mean2)
# summary(regression_agreeableness_mean2)
# for Openness
regression_openness_D <- lm(D ~ mean_openness, data = data_processed_after_exclusions)
report(regression_openness_D)
summary(regression_openness_D)
# regression_openness_mean1 <- lm(mean1 ~ mean_openness, data = data_processed_after_exclusions)
# regression_openness_mean2 <- lm(mean2 ~ mean_openness, data = data_processed_after_exclusions)
#
# report(regression_openness_mean1)
# summary(regression_openness_mean1)
#
# report(regression_openness_mean2)
# summary(regression_openness_mean2)
# for Extroversion
regression_extroversion_D <- lm(D ~ mean_extroversion, data = data_processed_after_exclusions)
report(regression_extroversion_D)
summary(regression_extroversion_D)
# regression_extroversion_mean1 <- lm(mean1 ~ mean_extroversion, data = data_processed_after_exclusions)
# regression_extroversion_mean2 <- lm(mean2 ~ mean_extroversion, data = data_processed_after_exclusions)
#
# report(regression_extroversion_mean1)
# summary(regression_extroversion_mean1)
#
# report(regression_extroversion_mean2)
# summary(regression_extroversion_mean2)
# for Neuroticism
regression_neuroticism_D <- lm(D ~ mean_neuroticism, data = data_processed_after_exclusions)
report(regression_neuroticism_D)
summary(regression_neuroticism_D)
# regression_neuroticism_mean1 <- lm(mean1 ~ mean_neuroticism, data = data_processed_after_exclusions)
# regression_neuroticism_mean2 <- lm(mean2 ~ mean_neuroticism, data = data_processed_after_exclusions)
#
# report(regression_neuroticism_mean1)
# summary(regression_neuroticism_mean1)
#
# report(regression_neuroticism_mean2)
# summary(regression_neuroticism_mean2)
# for Conscientiousness
regression_conscientiousness_D <- lm(D ~ mean_conscientiousness, data = data_processed_after_exclusions)
report(regression_conscientiousness_D)
summary(regression_conscientiousness_D)
# regression_conscientiousness_mean1 <- lm(mean1 ~ mean_conscientiousness, data = data_processed_after_exclusions)
# regression_conscientiousness_mean2 <- lm(mean2 ~ mean_conscientiousness, data = data_processed_after_exclusions)
#
# report(regression_conscientiousness_mean1)
# summary(regression_conscientiousness_mean1)
#
# report(regression_conscientiousness_mean2)
# summary(regression_conscientiousness_mean2)
# for Agreeableness
#ich verwende den Datensatz aus der vorherigen Aufgabe, wo wir Plots erstellen mussten, damit ich keine unnötige Fehlerwarnung erhalte
mean_agree$extreme <- ifelse(mean_agree$D >= quantile(mean_agree$D, 0.9) |
mean_agree$D <= quantile(mean_agree$D, 0.1),
"extreme", "not extreme")
# Scatter plot with regression lines
#für Classic entschieden, weil in den meisten Publications der Hintergrund blank ist und alles sehr minimalistisch gehalten wird
#Capitalize words
#verwende helle vs dunkle Farbe, damit auch farbenblinde den Kontrast erkennen können, nebst der Form
#in publicationen ist nicht üblich die Titel oder ähnliches fett zu drucken, aber du hast gemeint, wir haben da Freihjeiten, solange es presentable ist und ich glaube fette Titel machen es presentable
#die limits sind etwas weiter gesetzt, damit die Punkte gut dargestellt werden köännen und nicht womöglich abgeschnitten werden
#f¨r die y- achse habe ich sechs breaks gewählt, damit man die 0.5 und 1 besser differenzieren kann - und die boundarys bis -2 bis 2, weil dass der min und max vom D score ist, weil mit -1 und 1 könnte man den Eindruck erhalten, dass die Variation grlsser ist als sie tatsächlich ist
plot_agree <- ggplot(mean_agree, aes(x = mean_agreeableness, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(fill = extreme, shape = extreme)) +
geom_jitter(alpha = 0.2, aes(fill = extreme, shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
scale_fill_manual(values = c("not extreme" = "#000000", "extreme" = "#fb75fb"),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
geom_smooth(method = "lm", color = "#f915f9", se = TRUE) +
labs(x = "Mean Agreeableness Score",
y = "D Score",
title = "Scatter Plot of Mean Agreeableness Predicting the D score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1, 6.2)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(-2, 2)) +
expand_limits(x = c(1, 6), y = c(-1, 1)) +
coord_cartesian(expand = FALSE) +
theme_classic() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"))
print(plot_agree)
# for Openness
mean_open$extreme <- ifelse(mean_open$D >= quantile(mean_open$D, 0.9) |
mean_open$D <= quantile(mean_open$D, 0.1),
"extreme", "not extreme")
plot_open <- ggplot(mean_open, aes(x = mean_openness, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(fill = extreme, shape = extreme)) +
geom_jitter(alpha = 0.2, aes(fill = extreme, shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
scale_fill_manual(values = c("not extreme" = "#000000", "extreme" = "#ff9347"),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
geom_smooth(method = "lm", color = "orange", se = TRUE) +
labs(x = "Mean Openness Score",
y = "D Score",
title = "Scatter Plot of Mean Openness Predicting the D score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1, 6.2)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(-2, 2)) +
expand_limits(x = c(1, 6), y = c(-1, 1)) +
coord_cartesian(expand = FALSE) +
theme_classic() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
print(plot_open)
# for Extroversion
mean_extro$extreme <- ifelse(mean_extro$D >= quantile(mean_extro$D, 0.9) |
mean_extro$D <= quantile(mean_extro$D, 0.1),
"extreme", "not extreme")
plot_extro <- ggplot(mean_extro, aes(x = mean_extroversion, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(fill = extreme, shape = extreme)) +
geom_jitter(alpha = 0.2, aes(fill = extreme, shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
scale_fill_manual(values = c("not extreme" = "#000000", "extreme" = "#ed5e5f"),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
geom_smooth(method = "lm", color = "#f80609", se = TRUE) +
labs(x = "Mean Extroversion Score",
y = "D Score",
title = "Scatter Plot of Mean Extroversion Predicting the D score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1, 6.2)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(-2, 2)) +
expand_limits(x = c(1, 6), y = c(-1, 1)) +
coord_cartesian(expand = FALSE) +
theme_classic() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
print(plot_extro)
# for Neuroticism
mean_neuro$extreme <- ifelse(mean_neuro$D >= quantile(mean_neuro$D, 0.9) |
mean_neuro$D <= quantile(mean_neuro$D, 0.1),
"extreme", "not extreme")
plot_neuro <- ggplot(mean_neuro, aes(x = mean_neuroticism, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(fill = extreme, shape = extreme)) +
geom_jitter(alpha = 0.2, aes(fill = extreme, shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
scale_fill_manual(values = c("not extreme" = "#000000", "extreme" = "#87CEEB"),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
geom_smooth(method = "lm", color = "#1a1ce4", se = TRUE) +
labs(x = "Mean Neuroticism Score",
y = "D Score",
title = "Scatter Plot of Mean Neuroticism Predicting the D score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1, 6.2)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(-2, 2)) +
expand_limits(x = c(1, 6), y = c(-1, 1)) +
coord_cartesian(expand = FALSE) +
theme_classic() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
print(plot_neuro)
# for Conscientiousness
mean_cons$extreme <- ifelse(mean_cons$D >= quantile(mean_cons$D, 0.9) |
mean_cons$D <= quantile(mean_cons$D, 0.1),
"extreme", "not extreme")
plot_cons <- ggplot(mean_cons, aes(x = mean_conscientiousness, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(fill = extreme, shape = extreme)) +
geom_jitter(alpha = 0.2, aes(fill = extreme, shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
scale_fill_manual(values = c("not extreme" = "#000000", "extreme" = "#27d08b"),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme")) +
geom_smooth(method = "lm", color = "#00757b", se = TRUE) +
labs(x = "Mean Conscientiousness Score",
y = "D Score",
title = "Scatter Plot of Mean Conscientiousness Predicting the D score") +
scale_x_continuous(breaks = pretty_breaks(n = 6), limits = c(1, 6.2)) +
scale_y_continuous(breaks = pretty_breaks(n = 6),  limits = c(-2, 2)) +
expand_limits(x = c(1, 6), y = c(-1, 1)) +
coord_cartesian(expand = FALSE) +
theme_classic() +
theme(title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
print(plot_cons)
#ich hab mich für dieses Layout entschieden, weil es mir gefällt und ich mit diesem Layout experimentieren wollte
layout <- "
A#B
#C#
D#E
"
#seperate Guide, damit nicht fünf mal die selbe Guide in anderen Farben auftaucht
plot_guide <- ggplot(mean_cons, aes(x = mean_conscientiousness, y = D)) +
geom_point(size = 1.5, alpha = 0.7, aes(shape = extreme)) +
scale_shape_manual(values = c("not extreme" = 16, "extreme" = 24),
name = "Extreme D Score",
labels = c("Top or Bottom 10%", "Not Extreme"))
#G existiert nicht, deshalb wird der Plot gedroptt, aber die Legende wird behalten
plot_temp <- wrap_plots(A = plot_agree + labs(title = "Agreeableness") + theme(legend.position = "none"),
B = plot_open + labs(title = "Openness") + theme(legend.position = "none"),
C = plot_extro + labs(title = "Extroversion") + theme(legend.position = "none"),
D = plot_neuro + labs(title = "Neuroticism") + theme(legend.position = "none"),
E = plot_cons + labs(title = "Conscientiousness") + theme(legend.position = "none"),
G = plot_guide,
design = layout) +
theme_classic()
plot_comb_bfi <- plot_temp + plot_layout(guides = 'collect', design = layout) &
theme(axis.title = element_text(face = "plain"),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold"))  &
plot_annotation(title = "Scatter Plots of the BFI Subscales Prediciting the D Score",
theme = theme(plot.title = element_text(size = 16, face = "bold")))
#its not pretty, but if you open the png or pdf, it's in a much butter resdolution
#die eine Warnung kann man ignorieren, die bezieht sich auf die plot_guide, dies ist beuwsst gemacht
print(plot_comb_bfi)
View(plot_comb_bfi)
