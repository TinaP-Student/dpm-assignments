labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, color = gender) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, color = "gender") +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill "Gender") +
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("nonbinary" = "#4d334d", "female" = "#333333", "male" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender)) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
report_table(t_test_result)
report_effectsize(t_test_result)
report_text(t_test_result)
set.seed(123)
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
#Split Histogram
ggplot(data_p_a_e_rearranged,
aes(x = AMP_score, group= gender, fill = gender)) +
facet_grid(~gender, labeller = labeller(gender = c("nonbinary" = "Nonbinary", "female" = "Women", "male" = "Men"))) +
geom_histogram(binwidth = 1) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Frequency",
fill = "Gender") +
scale_fill_manual(values = c("female"="#996699","male" = "#777777","nonbinary" = "#e89d97"),
breaks = c("nonbinary", "female",  "male"),
labels=c("Nonbinary", "Women", "Men"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
#t test
AMP_t_test_result <- t.test(AMP_score ~ gender, data = data_p_e_without_nb)
print(AMP_t_test_result)
report_table(t_test_result)
report_effectsize(t_test_result)
report_table(AMP_t_test_result)
report_effectsize(AMP_t_test_result)
report_text(AMP_t_test_result)
#install.packages("ggrepel")
library(ggrepel)
#labelled with participant codes
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
geom_text_repel(data = subset(data_processed_after_exclusions, subject %in% c("216287717", "247697997", "881713870")), aes(label = subject), color = "black", box.padding = 0.5) +
scale_colour_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "labelled subjects 216287717, 881713870 and 247697997")
#labelled one group
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
geom_text_repel(data = subset(data_processed_after_exclusions, gender == "nonbinary"), aes(label = subject), color = "black", box.padding = 0.5) +
scale_colour_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "Just the nonbinary are labelled")
#SINGLE PLOTS WITH LABELS!!!
#PREPARE DATASETS
data_p_a_e_nb <- data_processed_after_exclusions |>
filter(gender == "nonbinary")
data_p_a_e_female <-data_processed_after_exclusions |>
filter(gender == "female")
data_p_a_e_male <- data_processed_after_exclusions |>
filter(gender == "male")
#NONBINÄRY
p_label <- ggplot(data_p_a_e_nb, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#7a064c")
p_label + geom_text_repel() + labs(title = "plot of nonbinarys")
#FEMALE - to many overlaps
p_f_label <- ggplot(data_p_a_e_female, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#7a060a")
p_f_label + geom_text_repel() + labs(title = "plot of females")
#MALE - to many overlaps
p_m_label <- ggplot(data_p_a_e_male, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#996699")
p_m_label + geom_text_repel() + labs(title = "plot of males")
#one varaiant
p_female_gender + p_male_gender + p_nb_gender
#one varaiant
p_f_label + p_m_label + p_label
#labelled one group
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
geom_text_repel(data = subset(data_processed_after_exclusions, gender == "nonbinary"), aes(label = subject), color = "black", box.padding = 0.5) +
scale_colour_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "Just the nonbinary are labelled")
#NONBINÄRY
p_label <- ggplot(data_p_a_e_nb, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#e89d97")
p_label + geom_text_repel() + labs(title = "plot of nonbinarys")
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female" = "#7a060a", "male" = "#996699", "nonbinary" =  "#7a064c")) +
labs(title = "For the other Tasks")
#NONBINÄRY
p_label <- ggplot(data_p_a_e_nb, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#e89d97")
#FEMALE - to many overlaps
p_f_label <- ggplot(data_p_a_e_female, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#7a060a")
#MALE - to many overlaps
p_m_label <- ggplot(data_p_a_e_male, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#777777")
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female" = "#7a060a", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "For the other Tasks")
p_all_label <-ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female" = "#7a060a", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "For the other Tasks")
p_all_label +geom_text_repel() + labs(title = "plot of all genders")
#other variant
(p_f_label + p_m_label + p_label)/
p_all_label
to_save<-(p_f_label + p_m_label + p_label)/
p_all_label
ggsave("../data/plots/Gender_Comb_plot.png", plot = to_save, dpi = 300, device = "png")
ggsave("../data/plots/Gender_Comb_plot.pdf", plot = to_save, device = "pdf")
report_text(AMP_t_test_result)
#Interpretation
report_text(AMP_t_test_result)
report_text(t_test_result)
#raincloud plot
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.7, aes(color = gender)) +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42"))
#raincloud plot
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.7, aes(color = gender)) +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42"))
set.seed(123)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
library("ggExtra")
library("ggplot2")
library("viridis")
library("ggsci")
library(ggrepel)
library(ggmagnify)
library(ggridges)
library(patchwork)
library(easystats)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
#install.packages("ggExtra")
#scatter Plots, with regression lines, without histograms - each single plot
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female"="#996699","male" = "#777777","nonbinary" =  "#e89d97"))+
geom_smooth(method = "lm", se = FALSE) +
facet_grid(gender ~ ., scales = "free_y", space = "free_y")  #makes multiple plots
#scatter Plots, with regression lines, without histograms - one plot
fr_MARG<- ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female"="#996699","male" = "#777777","nonbinary" =  "#e89d97"))+
geom_smooth(method = "lm", se = FALSE)
print(fr_MARG)
ggMarginal(fr_MARG,type = "histogram", groupColour = TRUE, groupFill = TRUE)
#install.packages("ggExtra")
#scatter Plots, with regression lines, without histograms - each single plot
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female"="#996699","male" = "#777777","nonbinary" =  "#e89d97"))+
geom_smooth(method = "lm", se = FALSE) +
facet_grid(gender ~ ., scales = "free_y", space = "free_y")  #makes multiple plots
#scatter Plots, with regression lines, without histograms - one plot
fr_MARG<- ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female"="#996699","male" = "#777777","nonbinary" =  "#e89d97"))+
geom_smooth(method = "lm", se = FALSE)
print(fr_MARG)
ggMarginal(fr_MARG,type = "histogram", groupColour = TRUE, groupFill = TRUE)
#install.packages("ggrepel")
library(ggrepel)
#labelled with participant codes
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
geom_text_repel(data = subset(data_processed_after_exclusions, subject %in% c("216287717", "247697997", "881713870")), aes(label = subject), color = "black", box.padding = 0.5) +
scale_colour_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "labelled subjects 216287717, 881713870 and 247697997")
#labelled one group
ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
geom_text_repel(data = subset(data_processed_after_exclusions, gender == "nonbinary"), aes(label = subject), color = "black", box.padding = 0.5) +
scale_colour_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "Just the nonbinary are labelled")
#SINGLE PLOTS WITH LABELS!!!
#PREPARE DATASETS
data_p_a_e_nb <- data_processed_after_exclusions |>
filter(gender == "nonbinary")
data_p_a_e_female <-data_processed_after_exclusions |>
filter(gender == "female")
data_p_a_e_male <- data_processed_after_exclusions |>
filter(gender == "male")
#for the Saving and COmbine Task
#NONBINÄRY
p_label <- ggplot(data_p_a_e_nb, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#e89d97")
p_label + geom_text_repel() + labs(title = "plot of nonbinarys")
#FEMALE - to many overlaps
p_f_label <- ggplot(data_p_a_e_female, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#7a060a")
p_f_label + geom_text_repel() + labs(title = "plot of females")
#MALE - to many overlaps
p_m_label <- ggplot(data_p_a_e_male, aes(AMP_score, mean_evaluation, label = subject)) +
geom_point(color = "#777777")
p_m_label + geom_text_repel() + labs(title = "plot of males")
#ALL
p_all_label <-ggplot(data_processed_after_exclusions, aes(AMP_score, mean_evaluation, label = subject, colour = gender)) +
geom_point() +
scale_colour_manual(values = c("female" = "#7a060a", "male" = "#777777", "nonbinary" =  "#e89d97")) +
labs(title = "For the other Tasks")
p_all_label +geom_text_repel() + labs(title = "plot of all genders")
p_all_label +geom_text_repel(color = "black") + labs(title = "plot of all genders")
#install.packages("ggmagnify", repos = c("https://hughjonesd.r-universe.dev",
#                 "https://cloud.r-project.org"))
#FEMALE - to many overlaps
from <- c(xmin =0.75,xmax = 1, ymin = 1, ymax = 1.2)
# Names xmin, xmax, ymin, ymax are optional:
to <- c(0.25,0.75, 2,3)
p_f_label + geom_magnify(from = from, to = to)+
labs(title = "Magnify some female participants")
#or
p_m_label + geom_magnify(from = c(0.46, 0.65, 0.8,  1.2), to = c(0.3,0.8, 3,4))+
labs(title = "Magnify some male participants")
#nonbinary to magnify would be a bit sad, because they are just three people
from <- c(xmin =0.75,xmax = 1, ymin = 0.8, ymax = 1.2)
p_f_label + geom_magnify(from = from, to = to)+
labs(title = "Magnify some female participants")
from <- c(xmin =0.8,xmax = 1, ymin = 0.8, ymax = 1.2)
p_f_label + geom_magnify(from = from, to = to)+
labs(title = "Magnify some female participants")
#I did a Correlation between mean_evaluation and AMP_score
Correlation <- cor(data_processed_after_exclusions$mean_evaluation, data_processed_after_exclusions$AMP_score)|>
print()
#some additional tests
correlation_test <- cor.test(data_processed_after_exclusions$mean_evaluation, data_processed_after_exclusions$AMP_score)|>
print()
report_text(correlation_test, table = NULL)
report_table(correlation_test)
report_statistics(correlation_test, table = NULL)
report_parameters(correlation_test)
# Prepare the data
data_p_e_without_nb <- data_processed_after_exclusions %>%
filter(gender %in% c("female", "male"))
#t test
t_test_result <- t.test(mean_evaluation ~ gender, data = data_p_e_without_nb)
print(t_test_result)
#for interpreatation and report see below -> #Test
#Split Histogram
ggplot(data_processed_after_exclusions,
aes(x = mean_evaluation, group= gender, fill = gender)) +
facet_grid(~gender)+
geom_histogram(binwidth = 1) +
labs(title = "Self-reported Evaluations by Gender",
x = "Mean evaluation",
y = "Frequency") +
scale_fill_manual(values = c("female"="#996699","male" = "#777777","nonbinary" = "#e89d97"))
#Split Violin
ggplot(data_processed_after_exclusions,
aes(y = mean_evaluation, x = gender, fill =gender)) +
geom_violin(show.legend = FALSE) +
labs(title = "Self-reported Evaluations by Gender",
y = "Mean evaluation",
x = "Gender")+
scale_fill_manual(values = c("female"="#996699","male" = "#777777","nonbinary" = "#e89d97"))
#raincloud plot
ggplot(data_processed_after_exclusions, aes(y = gender, x = mean_evaluation, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.7, aes(color = gender)) +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42"))
#REARRANGE the order of the factors <- one way
data_p_a_e_rearranged <- data_processed_after_exclusions |>
mutate(gender = factor(gender, levels = c("nonbinary", "female", "male")))
#other way with aes(y = , x = factor(VARIABLE, levels = c("order")...is soetimes more complicated
#Split Histogram
ggplot(data_p_a_e_rearranged,
aes(x = AMP_score, group= gender, fill = gender)) +
facet_grid(~gender, labeller = labeller(gender = c("nonbinary" = "Nonbinary", "female" = "Women", "male" = "Men"))) +
geom_histogram(binwidth = 1) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Frequency",
fill = "Gender") +
scale_fill_manual(values = c("female"="#996699","male" = "#777777","nonbinary" = "#e89d97"),
breaks = c("nonbinary", "female",  "male"),
labels=c("Nonbinary", "Women", "Men"))
#Split Violin rearrange in aes()
ggplot(data_p_a_e_rearranged,
aes(y = AMP_score, x = factor(gender, levels = c("female", "male", "nonbinary")),
fill = gender)) +
geom_violin(show.legend = FALSE) +
labs(title = "AMP Scores by Gender",
y = "AMP Scores",
x = "Gender",
fill = "Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary")) +
scale_x_discrete(labels = c("Female", "Male", "Nonbinary"))
#raincloud plot
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("female", "male", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("male", "female", "nonbinary"),
labels = c("Female", "Male", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
ggplot(data_p_a_e_rearranged,
aes(y = gender, x = AMP_score, fill = gender)) +
geom_density_ridges(alpha = 0.7, scale = 0.5) +
geom_point(position = position_jitter(), alpha = 0.5, aes(color = gender), show.legend = FALSE) +
labs(title = "AMP scores by Gender",
x = "AMP Scores",
y = "Gender",
fill ="Gender") +
scale_fill_manual(values = c("female" = "#996699", "male" = "#777777", "nonbinary" = "#e89d97"),
breaks = c("male", "female", "nonbinary"),
labels = c("Male", "Female", "Nonbinary")) +
scale_color_manual(values = c("female" = "#4d334d", "male" = "#333333", "nonbinary" = "#8c4d42")) +
scale_y_discrete(labels = c("Nonbinary", "Female", "Male"))
?easystats
report(data_processed)
report(iris)
#install.packages('patchwork')
#one varaiant
p_f_label + p_m_label + p_label
#other variant
(p_f_label + p_m_label + p_label)/
p_all_label
